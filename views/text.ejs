<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= file.original_name %> - splatbin</title>
    <link rel="icon" type="image/png" href="/favicon.png">
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            margin: 0;
            padding: 0;
            background: #000000;
            color: #cba6f7;
            min-height: 100vh;
        }
        .top-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 20px 40px;
            background: #000000;
            border-bottom: 1px solid #333333;
        }
        .header-logo {
            display: flex;
            align-items: center;
            gap: 15px;
            text-decoration: none;
            color: inherit;
        }
        .header-logo:hover .logo-text {
            color: #f5c2e7;
        }
        .header-center {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        .header-right {
            width: 150px;
        }
        .logo {
            width: 32px;
            height: 32px;
            object-fit: contain;
        }
        .logo-text {
            font-size: 24px;
            font-weight: 600;
            color: #cba6f7;
            margin: 0;
            transition: color 0.2s ease;
        }
        .item-id {
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            font-size: 14px;
            color: #cba6f7;
            background: #222222;
            padding: 6px 12px;
            border-radius: 6px;
        }
        .copy-btn {
            background: #cba6f7;
            color: #000000;
            border: none;
            padding: 6px 12px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.2s ease;
        }
        .copy-btn:hover {
            background: #f5c2e7;
        }
        .main-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 40px 20px;
        }
        .header {
            background: #111111;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.8);
            margin-bottom: 20px;
            border: 1px solid #333333;
        }
        .file-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 10px;
        }
        .file-name {
            font-size: 18px;
            font-weight: 600;
            color: #cba6f7;
        }
        .file-meta {
            color: #888888;
            font-size: 14px;
        }
        .actions {
            display: flex;
            gap: 10px;
        }
        .btn {
            padding: 8px 16px;
            text-decoration: none;
            border-radius: 8px;
            font-size: 14px;
            border: none;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.2s ease;
        }
        .btn-primary {
            background: #cba6f7;
            color: #000000;
        }
        .btn-secondary {
            background: #444444;
            color: #cba6f7;
        }
        .btn:hover {
            transform: translateY(-1px);
        }
        .content-container {
            background: #111111;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.8);
            overflow: hidden;
            border: 1px solid #333333;
            position: relative;
        }
        .copy-text-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: #cba6f7;
            color: #000000;
            border: none;
            padding: 6px 12px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 12px;
            font-weight: 500;
            transition: all 0.2s ease;
            z-index: 10;
            box-shadow: 0 2px 8px rgba(0,0,0,0.3);
        }
        .copy-text-btn:hover {
            background: #f5c2e7;
        }
        
        /* Mobile responsive styles */
        @media (max-width: 768px) {
            .top-header {
                padding: 15px 20px;
                flex-wrap: wrap;
                gap: 10px;
            }
            .header-logo {
                order: -1;
                flex: 0 0 auto;
                gap: 8px;
            }
            .logo {
                width: 24px;
                height: 24px;
            }
            .logo-text {
                font-size: 18px;
            }
            .header-center {
                flex: 1;
                justify-content: center;
                gap: 10px;
            }
            .header-right {
                width: auto;
                flex: 0 0 auto;
            }
            .item-id {
                font-size: 12px;
                padding: 4px 8px;
            }
            .copy-btn {
                font-size: 12px;
                padding: 4px 8px;
            }
        }
        
        @media (max-width: 480px) {
            .top-header {
                padding: 10px 15px;
            }
            .header-center {
                gap: 8px; /* Keep elements on same line, just reduce gap */
            }
            .logo-text {
                display: none; /* Hide text on very small screens */
            }
            .item-id {
                font-size: 11px;
                padding: 3px 6px;
            }
            .copy-btn {
                font-size: 11px;
                padding: 3px 6px;
            }
        }
        .content {
            padding: 0;
            margin: 0;
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            font-size: 14px;
            line-height: 1.5;
            white-space: pre-wrap;
            overflow-x: auto;
            background: #000000;
            border: none;
            color: #cba6f7;
        }
        /* Dynamic line number width based on content */
        .line-number.narrow {
            min-width: 25px;
            padding: 0 4px;
        }
        .line-number.medium {
            min-width: 32px;
            padding: 0 6px;
        }
        .line-number.wide {
            min-width: 42px;
            padding: 0 8px;
        }
        .line-number.extra-wide {
            min-width: 52px;
            padding: 0 10px;
        }
        .content-wrapper {
            display: flex;
            position: relative;
        }
        .content-wrapper::selection {
            background: rgba(203, 166, 247, 0.3);
        }
        .content-wrapper::-moz-selection {
            background: rgba(203, 166, 247, 0.3);
        }
        .content-lines {
            flex: 1;
            overflow-x: auto;
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            font-size: 14px;
            color: #cba6f7;
            position: relative;
        }
        .content-lines::before {
            content: '';
            position: absolute;
            top: 0;
            bottom: 0;
            left: 33px; /* Default for narrow */
            width: 1px;
            background: #333333;
            z-index: 1;
        }
        .content-lines.medium::before {
            left: 44px;
        }
        .content-lines.wide::before {
            left: 58px;
        }
        .content-lines.extra-wide::before {
            left: 72px;
        }
        .line-container {
            display: flex;
            align-items: stretch;
            min-height: 1.5em;
        }
        .line-container.narrow {
            background: linear-gradient(to right, #222222 33px, #000000 33px);
        }
        .line-container.medium {
            background: linear-gradient(to right, #222222 44px, #000000 44px);
        }
        .line-container.wide {
            background: linear-gradient(to right, #222222 58px, #000000 58px);
        }
        .line-container.extra-wide {
            background: linear-gradient(to right, #222222 72px, #000000 72px);
        }
        .line-container:first-child {
            padding-top: 20px;
        }
        .line-container:last-child {
            padding-bottom: 20px;
        }
        .line-container .line-number {
            flex-shrink: 0;
            text-align: right;
            background: #222222;
            color: #888888;
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            font-size: 14px;
            line-height: 1.5;
            user-select: none;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            pointer-events: none;
            padding-top: 0;
            align-self: stretch;
            display: flex;
            align-items: flex-start;
            justify-content: flex-end;
        }
        .line-container .content-line {
            line-height: 1.5;
            white-space: pre-wrap;
            word-wrap: break-word;
            overflow-wrap: break-word;
            margin: 0;
            padding: 0 20px;
            flex: 1;
            user-select: text;
            -webkit-user-select: text;
            -moz-user-select: text;
            -ms-user-select: text;
        }
        .line-container .content-line:empty::before {
            content: " ";
            white-space: pre;
        }
        .home-link {
            text-align: center;
            margin-top: 20px;
        }
        .home-link a {
            color: #cba6f7;
            text-decoration: none;
            font-weight: 500;
        }
        .home-link a:hover {
            color: #f5c2e7;
            text-decoration: underline;
        }
        .download-commands {
            margin: 30px 0;
            padding: 10px 20px 20px 20px;
            background: #222222;
            border-radius: 8px;
            border: 1px solid #333333;
        }
        .download-commands h3 {
            color: #cba6f7;
            margin-bottom: 20px;
            font-weight: 600;
        }
        .command-group {
            margin-bottom: 20px;
        }
        .command-group:last-child {
            margin-bottom: 0;
        }
        .command-group h4 {
            color: #cba6f7;
            margin-bottom: 8px;
            font-size: 14px;
            font-weight: 500;
        }
        .command-group pre {
            background: #000000;
            padding: 12px;
            border-radius: 6px;
            border: 1px solid #333333;
            overflow-x: auto;
            margin: 0;
        }
        .command-group code {
            color: #cba6f7;
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            font-size: 13px;
        }
    </style>
</head>
<body>
    <!-- Top Header with SplatBin -->
    <div class="top-header">
        <a href="/" class="header-logo">
            <img src="/logo.png" alt="splatbin" class="logo" width="32" height="32">
            <h1 class="logo-text">splatbin</h1>
        </a>
        <div class="header-center">
            <span class="item-id"><%= id %></span>
            <button onclick="copyLink()" class="copy-btn" id="copy-btn">Copy Link</button>
        </div>
        <div class="header-right"></div>
    </div>
    
    <!-- Main Content -->
    <div class="main-container">
        <div class="header">
            <div class="file-info">
                <div>
                    <div class="file-name"><%= file.original_name %></div>
                    <div class="file-meta">
                        Size: <%= (file.file_size / 1024).toFixed(1) %>KB<% if (file.expires_at) { %> 
                        Expires: <span id="expires-display" title="" style="cursor: help;"><%= new Date(file.expires_at).toLocaleString() %></span><% } %>
                    </div>
                </div>
                <div class="actions">
                    <a href="/raw/<%= id %>" class="btn btn-primary">Raw</a>
                    <a href="/download/<%= id %>" class="btn btn-secondary">Download</a>
                </div>
            </div>
        </div>
    
    <div class="content-container">
        <button onclick="copyTextContent()" class="copy-text-btn" id="copy-text-btn">Copy Text</button>
        <div class="content-wrapper">
            <%
                const lines = content.split('\n');
                const lineCount = lines.length;
                let lineNumberClass = 'narrow';
                if (lineCount >= 1000) {
                    lineNumberClass = 'extra-wide';
                } else if (lineCount >= 100) {
                    lineNumberClass = 'wide';
                } else if (lineCount >= 10) {
                    lineNumberClass = 'medium';
                }
            %>
            <div class="content-lines <%= lineNumberClass %>">
                <% for (let i = 0; i < lines.length; i++) { %>
                <div class="line-container <%= lineNumberClass %>">
                    <div class="line-number <%= lineNumberClass %>"><%= i + 1 %></div>
                    <div class="content-line"><%- lines[i].replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;') %></div>
                </div>
                <% } %>
            </div>
        </div>
    </div>
    
        <div class="download-commands">
            <h3>Download Command</h3>
            <div class="command-group">
                <pre><code>curl -L -O -J <%= req ? `${req.protocol}://${req.get('host')}` : '' %>/download/<%= id %></code></pre>
            </div>
        </div>
    </div>
    
    <script>
        function copyLink() {
            const url = window.location.href;
            navigator.clipboard.writeText(url).then(() => {
                const btn = document.getElementById('copy-btn');
                const originalText = btn.textContent;
                btn.textContent = 'Copied!';
                btn.style.background = '#f5c2e7';
                setTimeout(() => {
                    btn.textContent = originalText;
                    btn.style.background = '#cba6f7';
                }, 2000);
            });
        }
        
        function updateExpiresIn() {
            <% if (file.expires_at) { %>
            const expiresAt = new Date('<%= file.expires_at %>');
            const now = new Date();
            const diff = expiresAt - now;
            
            const expiresDisplayElement = document.getElementById('expires-display');
            if (!expiresDisplayElement) return;
            
            if (diff <= 0) {
                expiresDisplayElement.title = 'Expired';
                expiresDisplayElement.style.color = '#f38ba8'; // Red color
                return;
            }
            
            const days = Math.floor(diff / (1000 * 60 * 60 * 24));
            const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((diff % (1000 * 60)) / 1000);
            
            let timeString = '';
            if (days > 0) {
                timeString += `${days} day${days > 1 ? 's' : ''} `;
            }
            if (hours > 0) {
                timeString += `${hours}h `;
            }
            if (minutes > 0 || (hours > 0 && days === 0)) {
                timeString += `${minutes}m `;
            }
            if (days === 0 && hours === 0 && minutes < 10) {
                timeString += `${seconds}s`;
            }
            
            expiresDisplayElement.title = `${timeString.trim()} remaining`;
            <% } %>
        }
        
        // Update expires in countdown every second
        <% if (file.expires_at) { %>
        updateExpiresIn();
        setInterval(updateExpiresIn, 1000);
        <% } %>
        
        function copyTextContent() {
            // Get the raw text content from the content-lines div, excluding line numbers
            const contentLines = document.querySelectorAll('.content-line');
            let textContent = '';
            
            // Extract text content more carefully to avoid any line number contamination
            for (let i = 0; i < contentLines.length; i++) {
                const line = contentLines[i];
                // Use textContent to get clean text without HTML
                const lineText = line.textContent || line.innerText || '';
                textContent += lineText;
                // Add newline except for the last line
                if (i < contentLines.length - 1) {
                    textContent += '\n';
                }
            }
            
            const showFeedback = (btn, success = true) => {
                const originalText = btn.textContent;
                btn.textContent = success ? 'Copied!' : 'Failed!';
                btn.style.background = success ? '#f5c2e7' : '#f38ba8';
                setTimeout(() => {
                    btn.textContent = originalText;
                    btn.style.background = '#cba6f7';
                }, 2000);
            };
            
            const btn = document.getElementById('copy-text-btn');
            
            // Try modern clipboard API first
            if (navigator.clipboard && navigator.clipboard.writeText) {
                navigator.clipboard.writeText(textContent).then(() => {
                    showFeedback(btn, true);
                }).catch(err => {
                    console.error('Clipboard API failed: ', err);
                    // Fallback to legacy method
                    fallbackCopy(textContent, btn);
                });
            } else {
                // Direct fallback for browsers without clipboard API
                fallbackCopy(textContent, btn);
            }
            
            function fallbackCopy(text, btn) {
                try {
                    const textArea = document.createElement('textarea');
                    textArea.value = text;
                    textArea.style.position = 'fixed';
                    textArea.style.left = '-999999px';
                    textArea.style.top = '-999999px';
                    document.body.appendChild(textArea);
                    textArea.focus();
                    textArea.select();
                    const successful = document.execCommand('copy');
                    document.body.removeChild(textArea);
                    showFeedback(btn, successful);
                } catch (err) {
                    console.error('Fallback copy failed: ', err);
                    showFeedback(btn, false);
                }
            }
        }
    </script>
</body>
</html>
